/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tugas_responsi;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author Iqbal Abdul Majid
 */
public class laporan_kehilangan_barang extends javax.swing.JFrame {

    /**
     * Creates new form laporan_kehilangan_barang
     */
     DbConnection db=new DbConnection();
    public laporan_kehilangan_barang() throws ClassNotFoundException, SQLException {
        initComponents();
         db.connection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 255, 255))); // NOI18N

        jLabel1.setText("Nama Barang");

        jLabel2.setText("Keterangan");

        jButton1.setText("Tambah");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Tampil");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    String nama = jTextField1.getText();
    String keterangan = jTextField2.getText();
    
    if (!nama.isEmpty() && !keterangan.isEmpty()) {
        try {
            String insertDataQuery = "INSERT INTO laporan (nama, keterangan) VALUES (?, ?)";
            PreparedStatement preparedStatement = db.conn.prepareStatement(insertDataQuery);
            preparedStatement.setString(1, nama);
            preparedStatement.setString(2, keterangan);
            preparedStatement.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan!");
            
            jTextField1.setText("");
            jTextField2.setText("");
            
            preparedStatement.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menambahkan data!");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Nama barang dan keterangan tidak boleh kosong!");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         String namaBarang = JOptionPane.showInputDialog("Masukkan nama barang yang ingin di edit:");
    if (namaBarang != null) {
        try {
            // Cek apakah nama barang yang diinputkan ada dalam database
            String checkDataQuery = "SELECT COUNT(*) FROM laporan WHERE nama=?";
            PreparedStatement checkStatement = db.conn.prepareStatement(checkDataQuery);
            checkStatement.setString(1, namaBarang);
            ResultSet resultSet = checkStatement.executeQuery();
            resultSet.next();
            int rowCount = resultSet.getInt(1);
            
            if (rowCount > 0) {
                // Jika ada data dengan nama barang yang diinputkan, lanjutkan dengan proses edit
                String newNamaBarang = JOptionPane.showInputDialog("Masukkan nama barang baru:");
                String newKeterangan = JOptionPane.showInputDialog("Masukkan keterangan baru:");
                
                String updateDataQuery = "UPDATE laporan SET nama=?, keterangan=? WHERE nama=?";
                PreparedStatement updateStatement = db.conn.prepareStatement(updateDataQuery);
                updateStatement.setString(1, newNamaBarang);
                updateStatement.setString(2, newKeterangan);
                updateStatement.setString(3, namaBarang);
                updateStatement.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data berhasil di edit!");
            } else {
                JOptionPane.showMessageDialog(null, "Nama barang tidak ditemukan!");
            }
            
            checkStatement.close();
            resultSet.close();
//            DbConnection.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengedit data!");
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String namaBarang = JOptionPane.showInputDialog("Masukkan nama barang yang ingin dihapus:");
    if (namaBarang != null) {
        try {
            // Cek apakah nama barang yang diinputkan ada dalam database
            String checkDataQuery = "SELECT COUNT(*) FROM laporan WHERE nama=?";
            PreparedStatement checkStatement = db.conn.prepareStatement(checkDataQuery);
            checkStatement.setString(1, namaBarang);
            ResultSet resultSet = checkStatement.executeQuery();
            resultSet.next();
            int rowCount = resultSet.getInt(1);
            
            if (rowCount > 0) {
                // Jika ada data dengan nama barang yang diinputkan, lanjutkan dengan proses penghapusan
                String deleteDataQuery = "DELETE FROM laporan WHERE nama=?";
                PreparedStatement deleteStatement = db.conn.prepareStatement(deleteDataQuery);
                deleteStatement.setString(1, namaBarang);
                deleteStatement.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            } else {
                JOptionPane.showMessageDialog(null, "Nama barang tidak ditemukan!");
            }
            
            checkStatement.close();
            resultSet.close();
            db.conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menghapus data!");
        }
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         try {
        // Mendapatkan seluruh data barang dari database
        String getDataQuery = "SELECT nama, keterangan FROM laporan";
        PreparedStatement getDataStatement = db.conn.prepareStatement(getDataQuery);
        ResultSet resultSet = getDataStatement.executeQuery();
        
        DefaultListModel<String> listModel = new DefaultListModel<>();
        
        // Menambahkan nama barang ke dalam list model
        while (resultSet.next()) {
            String namaBarang = resultSet.getString("nama");
            listModel.addElement(namaBarang);
        }
        
        JList<String> barangList = new JList<>(listModel);
        
        // Menampilkan dialog dengan daftar nama barang
        JOptionPane.showMessageDialog(null, new JScrollPane(barangList), "Daftar Barang", JOptionPane.PLAIN_MESSAGE);
        
        // Mendapatkan nama barang yang dipilih
        String selectedNamaBarang = barangList.getSelectedValue();
        
        // Jika ada barang yang dipilih, tampilkan keterangan
        if (selectedNamaBarang != null) {
            String getKeteranganQuery = "SELECT laporan FROM kehilangan WHERE nama=?";
            PreparedStatement getKeteranganStatement = db.conn.prepareStatement(getKeteranganQuery);
            getKeteranganStatement.setString(1, selectedNamaBarang);
            ResultSet keteranganResultSet = getKeteranganStatement.executeQuery();
            
            if (keteranganResultSet.next()) {
                String keterangan = keteranganResultSet.getString("keterangan");
                JOptionPane.showMessageDialog(null, "Nama Barang: " + selectedNamaBarang + "\nKeterangan: " + keterangan, "Detail Barang", JOptionPane.PLAIN_MESSAGE);
            }
            
            getKeteranganStatement.close();
            keteranganResultSet.close();
        }
        
        getDataStatement.close();
        resultSet.close();
        db.conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil data!");
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new laporan_kehilangan_barang().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(laporan_kehilangan_barang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
